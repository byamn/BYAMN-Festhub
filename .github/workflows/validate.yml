name: Validate HTML and Links

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install HTML5 Validator
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip
        pip3 install html5validator
        
    - name: Validate HTML files
      run: |
        echo "Validating HTML files..."
        for file in *.html; do
          if [ -f "$file" ]; then
            echo "Validating $file"
            html5validator --root . "$file"
          fi
        done
        
    - name: Check for broken internal links
      run: |
        echo "Checking for obvious issues in HTML files..."
        # Check for common issues
        grep -r "href=\"#\"" *.html && echo "Warning: Found empty href attributes" || true
        grep -r "src=\"\"" *.html && echo "Warning: Found empty src attributes" || true
        
    - name: Verify required files exist
      run: |
        echo "Checking required files..."
        required_files=("README.md" "LICENSE" "index.html" ".gitignore")
        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            echo "Error: Required file $file is missing"
            exit 1
          else
            echo "✓ $file exists"
          fi
        done
        
    - name: Check file structure
      run: |
        echo "Verifying project structure..."
        # Check if important directories exist
        if [ ! -d "assets" ]; then
          echo "Warning: assets directory not found"
        fi
        if [ ! -d "docs" ]; then
          echo "Warning: docs directory not found"
        fi
        
        # List all HTML files
        echo "HTML files found:"
        find . -name "*.html" -type f
        
    - name: Validate package.json
      run: |
        if [ -f "package.json" ]; then
          echo "Validating package.json..."
          node -e "JSON.parse(require('fs').readFileSync('package.json', 'utf8'))"
          echo "✓ package.json is valid JSON"
        fi
        
    - name: Check for sensitive data
      run: |
        echo "Checking for potential sensitive data..."
        # Check for common patterns that shouldn't be in public repos
        if grep -r -i "password\|secret\|key\|token" *.html *.js *.json 2>/dev/null | grep -v "placeholder\|example\|dummy"; then
          echo "Warning: Potential sensitive data found"
        else
          echo "✓ No sensitive data patterns detected"
        fi
        
  lighthouse:
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install http-server
      run: npm install -g http-server
      
    - name: Start local server
      run: |
        http-server . -p 8080 &
        sleep 5
        
    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli
      
    - name: Run Lighthouse CI
      run: |
        lhci autorun --collect.url=http://localhost:8080 --collect.numberOfRuns=1
      continue-on-error: true